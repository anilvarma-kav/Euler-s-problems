""":param


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""


def fibonacci_seq_until_n(n):
    fib_seq = [1, 2]
    l = 2
    while l <= n:
        l = fib_seq[-1] + fib_seq[-2]
        fib_seq.append(l)

    return fib_seq

def sum_of_even_fib_terms(limit):
    fib_seq = [1, 2]
    l = 2
    s = 2
    while l <= limit:
        l = fib_seq[-1] + fib_seq[-2]
        fib_seq.append(l)
        if l % 2 == 0 :
            s = s + l
    return s

def sum_of_even_fib_terms_best_solution(limit):
    a , b = 1, 1
    t = 0
    while a <= limit:
        if a % 2 == 0:
            t = t + a
        a,b = b, a + b  # the real formula for Fibonacci sequence
    return t


if __name__ == '__main__':
    print(sum_of_even_fib_terms_best_solution(4000000))
